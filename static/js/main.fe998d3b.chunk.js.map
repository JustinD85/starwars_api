{"version":3,"sources":["components/ScrollingText/ScrollingText.js","components/FilterSection/FilterSection.js","components/CardArea/Card/Card.js","components/CardArea/CardArea.js","api/api.js","components/App/App.js","index.js"],"names":["ScrollingText","_ref","film","react_default","a","createElement","className","opening_crawl","title","release_date","FilterSection","props","setCurrentFilter","favoriteCount","currentFilter","map","item","isSelected","key","onClick","Card_Card","name","result","toggleFavorite","id","isFav","audio","fav","onMouseEnter","current","play","e","target","CardArea","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setAllData","areResolved","noun","setAllOfType","Promise","all","then","setState","isLoaded","asyncToGenerator","regenerator_default","mark","_callee","type","options","_this$props","getData","favorites","newData","prevState","newState","index","option","_args","arguments","wrap","_context","prev","next","length","undefined","concat","sent","state","results","isFavorite","find","i","url","includes","defineProperty","toConsumableArray","search","substring","stop","_x","apply","setCard","currentElement","speciesName","_this$lookUp","lookUp","homeworld","population","species","terrain","climate","model","vehicle_class","passengers","aProperty","predicate","element","updateFavorites","split","slice","getFavorites","min","max","items","flat","filter","getCard","getCardsOfType","ele","people","vehicles","planets","exec","_this$props2","changeNumber","stateOrProp","shouldShowFavs","react","Component","api","response","fetch","ok","abrupt","json","Error","App","setRandomFilm","unfilteredData","films","API","Math","floor","random","objectSpread","t0","error","message","favCopy","splice","indexOf","push","localStorage","setItem","JSON","stringify","change","React","createRef","parse","getItem","_this$state","components_ScrollingText_ScrollingText","components_FilterSection_FilterSection","components_CardArea_CardArea","ref","src","alt","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"wXAmBeA,eAfO,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACvB,OACEA,EACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,SAAIH,EAAKK,eACTJ,EAAAC,EAAAC,cAAA,UAAKH,EAAKM,OACVL,EAAAC,EAAAC,cAAA,YAAOH,EAAKO,gBAIhBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,aCSSI,SApBO,SAACC,GAAU,IACvBC,EAAmDD,EAAnDC,iBAAkBC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cACzC,OACEX,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBAChB,CAAC,SAAU,WAAY,WAAWS,IAAI,SAACC,GACtC,IAAIC,EAAa,GAGjB,OADIH,IAAkBE,IAAMC,EAAa,YAClCd,EAAAC,EAAAC,cAAA,UAAQa,IAAKF,EAAMG,QAAS,kBAAMP,EAAiBI,IAAOV,UAAWU,EAAO,IAAMC,GAAaD,KAGvG,CAAC,aAAaD,IAAI,WACjB,IAAIE,EAAa,YAEjB,MADsB,cAAlBH,IAA+BG,GAAc,aAC1Cd,EAAAC,EAAAC,cAAA,UAAQa,IAAI,YAAYC,QAAS,kBAAMP,EAAiB,cAAcN,UAAWW,GAAjF,cAAyGJ,GAAiB,oBCf1HO,eAAA,SAACT,GAAU,IAChBU,EAAmDV,EAAnDU,KAAMC,EAA6CX,EAA7CW,OAAQC,EAAqCZ,EAArCY,eAAgBC,EAAqBb,EAArBa,GAAIC,EAAiBd,EAAjBc,MAAOC,EAAUf,EAAVe,MAC3CC,EAAMF,EAAQ,eAAO,SAC3B,OACEtB,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVsB,aAAc,kBAAMF,EAAMG,QAAQC,SAClC3B,EAAAC,EAAAC,cAAA,OACEC,UAAU,gBACVa,QAAS,SAACY,GAAD,OAAOR,EAAeQ,EAAEC,OAAOR,KACxCA,GAAIA,GAHN,IAIGG,GACFxB,EAAAC,EAAAC,cAAA,UAAKgB,GACLC,KC+HQW,cA1Ib,SAAAA,EAAYtB,GAAO,IAAAuB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM1B,KAUR8B,WAAa,WACX,IAAIC,EAAc,CAAC,UAAW,UAAW,WAAY,UAClD3B,IAAI,SAAA4B,GAAI,OAAIT,EAAKU,aAAaD,KACjCE,QAAQC,IAAIJ,GAAaK,KAAK,kBAAMb,EAAKc,SAAS,CAAEC,UAAU,OAd7Cf,EAiBnBU,aAjBmB,eAAA3C,EAAAkC,OAAAe,EAAA,EAAAf,CAAAgB,EAAA/C,EAAAgD,KAiBJ,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAd,EAAA/C,EAAA8D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAad,EAAbS,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAuB,GAAvBR,EACkBtB,EAAKvB,MAA5B8C,EADKD,EACLC,QAASC,EADJF,EACIE,UADJS,EAAAE,KAAA,EAESZ,EAAO,GAAAe,OAAIlB,GAAJkB,OAAWjB,IAF3B,cAEPI,EAFOQ,EAAAM,KAGPb,EAAY1B,EAAKwC,MAAMpB,GACvBO,EAAWF,EAAQgB,QAAQ5D,IAAI,SAAAC,GAGnC,OAFAA,EAAK4D,aAAalB,EAAUmB,KAAK,SAAAC,GAAC,OAAI9D,EAAK+D,IAAIC,SAASF,KACxD9D,EAAKsC,KAAOA,EACLtC,IAPImD,EAAAE,KAAA,EASPnC,EAAKc,SAALb,OAAA8C,EAAA,EAAA9C,CAAA,GAAiBmB,EAAjBnB,OAAA+C,EAAA,EAAA/C,CAA4ByB,GAA5BY,OAAArC,OAAA+C,EAAA,EAAA/C,CAA0C0B,MATnC,WAUTF,EAAQU,KAVC,CAAAF,EAAAE,KAAA,gBAWLP,EAAQH,EAAQU,KAAKc,OAAO,MAC5BpB,EAASJ,EAAQU,KAAKe,UAAUtB,GAZ3BK,EAAAE,KAAA,GAaLnC,EAAKU,aAAaU,EAAMS,GAbnB,yBAAAI,EAAAkB,SAAAhC,EAAAhB,SAjBI,gBAAAiD,GAAA,OAAArF,EAAAsF,MAAAlD,KAAA4B,YAAA,GAAA/B,EAkCnBsD,QAAU,SAACC,GACT,OAAQA,EAAenC,MACrB,IAAK,SAAU,IAEToC,EAFSC,EACgBzD,EAAK0D,OAAO,UAAW,MAAOH,EAAeI,WAAlExE,EADKsE,EACLtE,KAAMyE,EADDH,EACCG,WAOd,OAJEJ,EADED,EAAeM,QAAQzB,OACXpC,EAAK0D,OAAO,UAAW,MAAOH,EAAeM,QAAQ,IAAI1E,KAEzD,UAET,CAAClB,EAAAC,EAAAC,cAAA,sBAAcgB,GAAalB,EAAAC,EAAAC,cAAA,mBAAWyF,GAAmB3F,EAAAC,EAAAC,cAAA,uBAAeqF,IAElF,IAAK,UAAW,IACNM,EAAiCP,EAAjCO,QAASF,EAAwBL,EAAxBK,WAAYG,EAAYR,EAAZQ,QAC7B,MAAO,CAAC9F,EAAAC,EAAAC,cAAA,uBAAe2F,GAAgB7F,EAAAC,EAAAC,cAAA,mBAAWyF,GAAmB3F,EAAAC,EAAAC,cAAA,uBAAe4F,IAEtF,QAAS,IACCC,EAAqCT,EAArCS,MAAOC,EAA8BV,EAA9BU,cAAeC,EAAeX,EAAfW,WAC9B,MAAO,CAACjG,EAAAC,EAAAC,cAAA,qBAAa6F,GAAc/F,EAAAC,EAAAC,cAAA,qBAAa8F,GAAsBhG,EAAAC,EAAAC,cAAA,oBAAY+F,MApDrElE,EA0DnB0D,OAAS,SAACjD,EAAM0D,EAAWC,GACzB,OAAOpE,EAAKwC,MAAM/B,GAAMkC,KAAK,SAAC0B,GAAD,OAAaA,EAAQF,KAAeC,KA3DhDpE,EA8DnBsE,gBAAkB,SAACzB,GACjB7C,EAAKvB,MAAMY,eAAewD,GAC1B,IAAM7D,EAAM6D,EAAI0B,MAAM,KAAK,GACrB5C,EAAW3B,EAAKwC,MAAMxD,GAAKwF,QAC9B3F,IAAI,SAAAC,GAIH,OAHIA,EAAK+D,IAAIC,SAASD,KACpB/D,EAAK4D,YAAc5D,EAAK4D,YAEnB5D,IAEXkB,EAAKc,SAALb,OAAA8C,EAAA,EAAA9C,CAAA,GACGjB,EAAM2C,KAzEQ3B,EA4FnByE,aAAe,SAACC,EAAKC,GACnB,MAAO,CAAC,SAAU,WAAY,WAC3B9F,IAAI,SAAC+F,GAAD,OAAA3E,OAAA+C,EAAA,EAAA/C,CAAeD,EAAKwC,MAAMoC,MAC9BC,OACAC,OAAO,SAAAT,GAAO,OAAIA,EAAQ3B,aAC1B7D,IAAI,SAACY,EAAKmD,GAAN,OAAYA,GAAK8B,GAAO9B,GAAK+B,GAAO3E,EAAK+E,QAAQtF,MAjGvCO,EAoGnBgF,eAAiB,SAACF,EAAQJ,EAAKC,GAC7B,OAAO3E,EAAKwC,MAAMsC,GAAQjG,IAAI,SAACoG,EAAKrC,GAClC,OAAOA,GAAK8B,GAAO9B,GAAK+B,GAAO3E,EAAK+E,QAAQE,MApG9CjF,EAAKwC,MAAQ,CACX0C,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTvB,QAAS,GACT9C,UAAU,GAPKf,uEA6EXuD,GACN,IACMjE,EADQ,aACG+F,KAAK9B,EAAeV,KACrC,OACE5E,EAAAC,EAAAC,cAACe,EAAD,CACEF,IAAKuE,EAAepE,KACpBA,KAAMoE,EAAepE,KACrBE,eAAgBc,KAAKmE,gBACrBhF,GAAIA,EACJE,MAAOW,KAAK1B,MAAMe,MAClBD,MAAOgE,EAAeb,WACtBtD,OAAQe,KAAKmD,QAAQC,yKAmBnBpD,KAAKqC,MAAMzB,gBACjBZ,KAAKI,gJAGE,IAAA+E,EAC2CnF,KAAK1B,MAA/CG,EADD0G,EACC1G,cAAe8F,EADhBY,EACgBZ,IAAKC,EADrBW,EACqBX,IAAKY,EAD1BD,EAC0BC,aACzBxE,EAAaZ,KAAKqC,MAAlBzB,SACFyE,EAAgC,cAAlB5G,EAAgC,QAAU,QACxD6G,EAAmC,cAAlB7G,EACvB,OACEX,EAAAC,EAAAC,cAAA,WAASC,UAAU,YAChBQ,GACCX,EAAAC,EAAAC,cAACuH,EAAA,SAAD,KACGhB,EAAM,GACLzG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWa,QAAS,kBAAMsG,GAAc,KAAK,KAEhEE,EACCtF,KAAK6E,eAAepG,EAAe8F,EAAKC,GAExCxE,KAAKsE,aAAaC,EAAKC,GAExBA,EAAMxE,KAAKqF,GAAa5G,GAAewD,OAAS,GAC/CnE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOa,QAAS,kBAAMsG,EAAa,KAAK,OAG9D3G,GAAiBmC,GAAY9C,EAAAC,EAAAC,cAAA,yCAC7B4C,GAAY9C,EAAAC,EAAAC,cAAA,+BAtICwH,aCKRC,EAAA,CAAErE,QATJ,eAAAxD,EAAAkC,OAAAe,EAAA,EAAAf,CAAAgB,EAAA/C,EAAAgD,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAwE,EAAA/D,EAAAC,UAAA,OAAAd,EAAA/C,EAAA8D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAad,EAAbS,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAuB,GAAvBG,EAAAE,KAAA,EACS2D,MAAK,wBAAAxD,OAAyBlB,GAAzBkB,OAAgCjB,IAD9C,YACRwE,EADQ5D,EAAAM,MAEDwD,GAFC,CAAA9D,EAAAE,KAAA,eAAAF,EAAA+D,OAAA,SAGLH,EAASI,QAHJ,aAKN,IAAIC,MAAM,uBALJ,wBAAAjE,EAAAkB,SAAAhC,EAAAhB,SAAH,gBAAAiD,GAAA,OAAArF,EAAAsF,MAAAlD,KAAA4B,YAAA,IC4FEoE,cArFb,SAAAA,IAAc,IAAAnG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,IACZnG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkG,GAAA7F,KAAAH,QAYFiG,cAbcnG,OAAAe,EAAA,EAAAf,CAAAgB,EAAA/C,EAAAgD,KAaE,SAAAC,IAAA,IAAAkF,EAAAC,EAAAlE,EAAAR,EAAA,OAAAX,EAAA/C,EAAA8D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEiBoE,EAAIhF,QAAQ,SAF7B,OAEN8E,EAFMpE,EAAAM,KAGN+D,EAAQD,EAAe5D,QACrBL,EAAWkE,EAAXlE,OACFR,EAAQ4E,KAAKC,MAAMD,KAAKE,SAAWtE,GACzCpC,EAAKc,SAAS,CAAE9C,KAAKiC,OAAA0G,EAAA,EAAA1G,CAAA,GAAMqG,EAAM1E,MANrBK,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2E,GAAA3E,EAAA,SAQZjC,EAAKc,SAAS,CACZ+F,MAAO5E,EAAA2E,GAAME,UATH,yBAAA7E,EAAAkB,SAAAhC,EAAAhB,KAAA,aAbFH,EA2BdX,eAAiB,SAACwD,GAChB,IAAIkE,EAAU/G,EAAKwC,MAAMhB,UAAUgD,QACnCuC,EAAQjE,SAASD,GACfkE,EAAQC,OAAOD,EAAQE,QAAQpE,GAAM,GAErCkE,EAAQG,KAAKrE,GACfsE,aAAaC,QAAQ,YAAaC,KAAKC,UAAUP,IACjD/G,EAAKc,SAAS,CAAEU,UAAWuF,KAlCf/G,EAqCdtB,iBAAmB,SAAC0C,GAClBpB,EAAKc,SAAS,CACZlC,cAAewC,EACfsD,IAAK,EACLC,IAAK,KAzCK3E,EA6CduF,aAAe,SAACgC,GACdvH,EAAKc,SAAS,CACZ4D,IAAK1E,EAAKwC,MAAMkC,IAAM6C,EACtB5C,IAAK3E,EAAKwC,MAAMmC,IAAM4C,KA9CxBvH,EAAKwC,MAAQ,CACXxE,KAAM,GACNwD,UAAW,GACX5C,cAAe,KACf8F,IAAK,EACLC,IAAK,EACLkC,MAAO,MAET7G,EAAKR,MAAQgI,IAAMC,YAVPzH,mFAqDZG,KAAKW,SAAS,CAAEU,UAAW6F,KAAKK,MAAMP,aAAaQ,QAAQ,eAAiB,KAC5ExH,KAAKiG,iDAGE,IAAAwB,EAC8CzH,KAAKqC,MAAlDxE,EADD4J,EACC5J,KAAMY,EADPgJ,EACOhJ,cAAe8F,EADtBkD,EACsBlD,IAAKC,EAD3BiD,EAC2BjD,IAAKnD,EADhCoG,EACgCpG,UAEvC,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0J,EAAD,CAAe7J,KAAMA,IACrBC,EAAAC,EAAAC,cAAC2J,EAAD,CACEpJ,iBAAkByB,KAAKzB,iBACvBC,cAAe6C,EAAUY,OACzBxD,cAAeA,IAEjBX,EAAAC,EAAAC,cAAC4J,EAAD,CACEnJ,cAAeA,EACf2C,QAASgF,EAAIhF,QACbmD,IAAKA,EACLC,IAAKA,EACLnF,MAAOW,KAAKX,MACZgC,UAASvB,OAAA+C,EAAA,EAAA/C,CAAMuB,GACf+D,aAAcpF,KAAKoF,aACnBlG,eAAgBc,KAAKd,iBAEvBpB,EAAAC,EAAAC,cAAA,SAAO6J,IAAK7H,KAAKX,OAAOvB,EAAAC,EAAAC,cAAA,UAAQ8J,IAAI,iBACpChK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa6J,IAAI,sBAAsBC,IAAI,0CAhFhDvC,aCDlBwC,IAASC,OAAOnK,EAAAC,EAAAC,cAACkK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fe998d3b.chunk.js","sourcesContent":["import React from 'react';\nimport './ScrollingText.scss';\nimport PropTypes from 'prop-types';\n\nconst ScrollingText = ({ film }) => {\n  return (\n    film ?\n      <div className=\"ScrollingText\">\n        <section>\n          <p>{film.opening_crawl}</p>\n          <h1>{film.title}</h1>\n          <span>{film.release_date}</span>\n        </section>\n      </div>\n      :\n      <div className=\"loading\">Loading</div>\n  )\n}\n\nexport default ScrollingText;\n\nScrollingText.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string,\n    opening_crawl: PropTypes.string,\n    release_date: PropTypes.string,\n  })\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './FilterSection.scss';\n\nconst FilterSection = (props) => {\n  const { setCurrentFilter, favoriteCount, currentFilter } = props\n  return (\n    <section className=\"FilterSection\">\n      {['people', 'vehicles', 'planets'].map((item) => {\n        let isSelected = '';\n\n        if (currentFilter === item) isSelected = 'selected'\n        return <button key={item} onClick={() => setCurrentFilter(item)} className={item + ' ' + isSelected}>{item}</button>\n      })}\n\n      {['favorites'].map(() => {\n        let isSelected = 'favorites';\n        if (currentFilter === 'favorites') isSelected += ' selected'\n        return <button key='favorites' onClick={() => setCurrentFilter('favorites')} className={isSelected}>Favorites: {favoriteCount || 'none'}</button>\n      })}\n    </section>\n  )\n}\n\nexport default FilterSection;\n\nFilterSection.propTypes = {\n  setCurrentFilter: PropTypes.func.isRequired,\n  favoriteCount: PropTypes.number.isRequired,\n}","import React from 'react'\nimport './Card.scss'\n\nexport default (props) => {\n  const { name, result, toggleFavorite, id, isFav, audio } = props\n  const fav = isFav ? '⭐️' : '☆'\n  return (\n    <div\n      className=\"Card\"\n      onMouseEnter={() => audio.current.play()}>\n      <div\n        className=\"favorite-card\"\n        onClick={(e) => toggleFavorite(e.target.id)}\n        id={id}\n      > {fav}</div>\n      {<h3>{name}</h3>}\n      {result}\n    </div>)\n}","import React, { Fragment, Component } from 'react';\nimport './CardArea.scss';\nimport Card from './Card/Card'\nimport PropTypes from 'prop-types'\nclass CardArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: [],\n      vehicles: [],\n      planets: [],\n      species: [],\n      isLoaded: false,\n    }\n  }\n\n  setAllData = () => {\n    let areResolved = ['planets', 'species', 'vehicles', 'people']\n      .map(noun => this.setAllOfType(noun))\n    Promise.all(areResolved).then(() => this.setState({ isLoaded: true }))\n  }\n\n  setAllOfType = async (type, options = '') => {\n    const { getData, favorites } = this.props;\n    const newData = await getData(`${type}${options}`);\n    const prevState = this.state[type];\n    const newState = newData.results.map(item => {\n      item.isFavorite = favorites.find(i => item.url.includes(i)) ? true : false;\n      item.type = type\n      return item\n    });\n    await this.setState({ [type]: [...prevState, ...newState] })\n    if (newData.next) {\n      const index = newData.next.search(/\\?/)\n      const option = newData.next.substring(index);\n      await this.setAllOfType(type, option)\n    }\n  }\n\n  setCard = (currentElement) => {\n    switch (currentElement.type) {\n      case 'people': {\n        const { name, population } = this.lookUp('planets', 'url', currentElement.homeworld)\n        let speciesName;\n        if (currentElement.species.length) {\n          speciesName = this.lookUp('species', 'url', currentElement.species[0]).name\n        } else {\n          speciesName = 'unknown'\n        }\n        return [<div>Planet: {name}</div>, <div>Pop: {population}</div>, <div>Species: {speciesName}</div>]\n      }\n      case 'planets': {\n        const { terrain, population, climate } = currentElement;\n        return [<div>Terrain: {terrain}</div>, <div>Pop: {population}</div>, <div>Climate: {climate}</div>]\n      }\n      default: {\n        const { model, vehicle_class, passengers } = currentElement;\n        return [<div>Model: {model}</div>, <div>Class: {vehicle_class}</div>, <div>Fits: {passengers}</div>]\n      }\n    }\n\n  }\n\n  lookUp = (noun, aProperty, predicate) => {\n    return this.state[noun].find((element) => element[aProperty] === predicate)\n  }\n\n  updateFavorites = (url) => {\n    this.props.toggleFavorite(url);\n    const key = url.split('/')[0]\n    const newState = this.state[key].slice()\n      .map(item => {\n        if (item.url.includes(url)) {\n          item.isFavorite = !item.isFavorite\n        }\n        return item\n      })\n    this.setState({\n      [key]: newState\n    })\n  }\n\n  getCard(currentElement) {\n    const regex = /\\w+\\/\\d+\\//\n    const id = regex.exec(currentElement.url)\n    return (\n      <Card\n        key={currentElement.name}\n        name={currentElement.name}\n        toggleFavorite={this.updateFavorites}\n        id={id}\n        audio={this.props.audio}\n        isFav={currentElement.isFavorite}\n        result={this.setCard(currentElement)}\n      />)\n  }\n\n  getFavorites = (min, max) => {\n    return ['people', 'vehicles', 'planets']\n      .map((items) => [...this.state[items]])\n      .flat()\n      .filter(element => element.isFavorite)\n      .map((fav, i) => i >= min && i <= max && this.getCard(fav))\n  }\n\n  getCardsOfType = (filter, min, max) => {\n    return this.state[filter].map((ele, i) => {\n      return i >= min && i <= max && this.getCard(ele)\n    })\n  }\n\n  async componentDidMount() {\n    await this.state.isLoaded\n    this.setAllData();\n  }\n\n  render() {\n    const { currentFilter, min, max, changeNumber } = this.props;\n    const { isLoaded } = this.state\n    const stateOrProp = currentFilter === 'favorites' ? 'props' : 'state';\n    const shouldShowFavs = currentFilter !== 'favorites'\n    return (\n      <section className='CardArea'>\n        {currentFilter &&\n          <Fragment>\n            {min > 0 &&\n              <button className='previous' onClick={() => changeNumber(-9)}>{'<'}</button>}\n\n            {shouldShowFavs ?\n              this.getCardsOfType(currentFilter, min, max)\n              :\n              this.getFavorites(min, max)}\n\n            {max < this[stateOrProp][currentFilter].length - 1 &&\n              <button className='next' onClick={() => changeNumber(9)}>{'>'}</button>}\n          </Fragment>\n        }\n        {!currentFilter && isLoaded && <div>Pick something young Jedi</div>}\n        {!isLoaded && <div>Loading!</div>}\n      </section>)\n  }\n}\n\nexport default CardArea;\n\nCardArea.propTypes = {\n  currentFilter: PropTypes.oneOf(['planets', 'people', 'vehicles', 'favorites']),\n  getData: PropTypes.func,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  favorites: PropTypes.array,\n  changeNumber: PropTypes.func,\n  toggleFavorite: PropTypes.func\n}","const getData = async (type, options = '') => {\n  const response = await fetch(`https://swapi.co/api/${type}${options}`);\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error('Error fetching Data');\n  }\n}\n\nexport default { getData };","import React, { Component } from 'react'\nimport './App.scss'\nimport ScrollingText from '../ScrollingText/ScrollingText'\nimport FilterSection from '../FilterSection/FilterSection'\nimport CardArea from '../CardArea/CardArea'\nimport API from '../../api/api'\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      film: {},\n      favorites: [],\n      currentFilter: null,\n      min: 0,\n      max: 0,\n      error: null\n    }\n    this.audio = React.createRef()\n  }\n\n  setRandomFilm = async () => {\n    try {\n      const unfilteredData = await API.getData('films')\n      const films = unfilteredData.results\n      const { length } = films\n      const index = Math.floor(Math.random() * length)\n      this.setState({ film: { ...films[index] } })\n    } catch (error) {\n      this.setState({\n        error: error.message,\n      })\n    }\n  }\n\n  toggleFavorite = (url) => {\n    let favCopy = this.state.favorites.slice()\n    favCopy.includes(url) ?\n      favCopy.splice(favCopy.indexOf(url), 1)\n      :\n      favCopy.push(url)\n    localStorage.setItem('favorites', JSON.stringify(favCopy))\n    this.setState({ favorites: favCopy })\n  }\n\n  setCurrentFilter = (type) => {\n    this.setState({\n      currentFilter: type,\n      min: 0,\n      max: 8\n    })\n  }\n\n  changeNumber = (change) => {\n    this.setState({\n      min: this.state.min + change,\n      max: this.state.max + change,\n    })\n  }\n\n  componentDidMount() {\n    this.setState({ favorites: JSON.parse(localStorage.getItem('favorites')) || [] })\n    this.setRandomFilm()\n  }\n\n  render() {\n    const { film, currentFilter, min, max, favorites } = this.state\n\n    return (\n      <div className=\"App\">\n        <ScrollingText film={film} />\n        <FilterSection\n          setCurrentFilter={this.setCurrentFilter}\n          favoriteCount={favorites.length}\n          currentFilter={currentFilter}\n        />\n        <CardArea\n          currentFilter={currentFilter}\n          getData={API.getData}\n          min={min}\n          max={max}\n          audio={this.audio}\n          favorites={[...favorites]}\n          changeNumber={this.changeNumber}\n          toggleFavorite={this.toggleFavorite}\n        />\n        <audio ref={this.audio}><source src=\"./beep4.mp3\"></source></audio>\n        <img className=\"background\" src=\"./sw_background.jpg\" alt=\"shows deathstar in background\" />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}